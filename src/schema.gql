# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MichelineStarEntity {
  id: String!
  starRating: String!
  awardedDate: String!
  restaurant: RestaurantEntity!
}

type RestaurantEntity {
  id: String!
  name: String!
  city: String!
  country: CountryEntity
  michelineStars: [MichelineStarEntity!]
}

type CountryEntity {
  id: String!
  name: String!
  cultures: [CultureEntity!]
  restaurants: [RestaurantEntity!]!
}

type ProductEntity {
  id: String!
  name: String!
  description: String!
  story: String!
  category: String!
  cultures: [CultureEntity!]!
}

type CultureEntity {
  id: String!
  name: String!
  description: String!
  products: [ProductEntity!]!
  countries: [CountryEntity!]
  restaurants: [RestaurantEntity!]
}

type Query {
  cultures: [CultureEntity!]!
  culture(id: String!): CultureEntity!
  products(skip: Float = 0, amount: Float = 100): [ProductEntity!]!
  product(id: String!): ProductEntity!
  countrys: [CountryEntity!]!
  country(id: String!): CountryEntity!
  restaurants: [RestaurantEntity!]!
  restaurant(id: String!): RestaurantEntity!
  michelineStar(restaurantId: String!, michelineStarId: String!): MichelineStarEntity!
  michelineStars(restaurantId: String!): [MichelineStarEntity!]!
  findOneRestaurantByCulture(cultureId: String!, restaurantId: String!): RestaurantEntity
  findAllRestaurantByCulture(cultureId: String!): [RestaurantEntity!]
  findCountryByCultureIdCountryId(countryId: String!, cultureId: String!): CountryEntity!
  findCultureCountries(cultureId: String!): [CountryEntity!]!
  getCountryByRestaurant(restaurantId: String!): CountryEntity
}

type Mutation {
  createCulture(culture: CultureDto!): CultureEntity!
  updateCulture(id: String!, culture: CultureDto!): CultureEntity!
  deleteCulture(id: String!): CultureEntity!
  createCountry(country: CountryDto!): CountryEntity!
  updateCountry(id: String!, country: CountryDto!): CountryEntity!
  deleteCountry(id: String!): CountryEntity!
  createRestaurant(restaurant: RestaurantDto!): RestaurantEntity!
  updateRestaurant(id: String!, restaurant: RestaurantDto!): RestaurantEntity!
  deleteRestaurant(id: String!): String!
  createMichelineStar(restaurantId: String!, michelineStar: MichelineStarDto!): RestaurantEntity!
  updateMichelineStar(restaurantId: String!, michelineStarId: String!, michelineStar: MichelineStarDto!): RestaurantEntity!
  deleteMichelineStar(restaurantId: String!, michelineStarId: String!): String!
  addRestaurantToCulture(cultureId: String!, restaurantId: String!): CultureEntity!
  associateRestaurantsToCulture(cultureId: String!, restaurants: [CultureRestaurantDto!]!): CultureEntity!
  deleteRestaurantOfACulture(cultureId: String!, restaurantId: String!): String!
  addCountryToCulture(cultureId: String!, countryId: String!): [CultureEntity!]!
  associateCountriesToCulture(cultureId: String!, countries: [CountryDto!]!): [CultureEntity!]!
  deleteCountryFromCulture(cultureId: String!, countryId: String!): [CultureEntity!]!
  addCountryToRestaurant(countryId: String!, restaurantId: String!): RestaurantEntity!
  deleteCountryOfARestaurant(countryId: String!, restaurantId: String!): RestaurantEntity!
}

input CultureDto {
  name: String!
  description: String!
}

input CountryDto {
  name: String!
}

input RestaurantDto {
  name: String!
  city: String!
}

input MichelineStarDto {
  starRating: String!
  awardedDate: String!
}

input CultureRestaurantDto {
  id: String!
}