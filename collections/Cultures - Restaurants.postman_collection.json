{
	"info": {
		"_postman_id": "fa2058e3-4b00-400d-a132-b3b6087e4bdf",
		"name": "Cultures - Restaurants",
		"description": "Representa la relación entre los recursos Cultura y Restaurante.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23001418"
	},
	"item": [
		{
			"name": "Add a restaurant to a culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function() {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/{{restaurantId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"{{cultureId}}",
						"restaurants",
						"{{restaurantId}}"
					]
				},
				"description": "Agrega un restaurante existente a una cultura"
			},
			"response": [
				{
					"name": "Add a retaurant to a culture",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{cultureId}}",
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Cultura Mexicana\",\n    \"description\": \"La gastronomía mexicana es el conjunto de platillos y técnicas culinarias de México que forman parte de las tradiciones y vida común de sus habitantes, enriquecida por las aportaciones de las distintas regiones del país, que deriva de la experiencia del México prehispánico con la cocina europea, entre otras. El 16 de noviembre del año 2010, la gastronomía mexicana fue reconocida como Patrimonio Cultural Inmaterial de la Humanidad por la Unesco.\",\n    \"restaurants\": [\n        {\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n            \"name\": \"El cielo\",\n            \"city\": \"Washington D. C.\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Add an restaurant to an invalid culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function() {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test('Get expected error message', function() {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql('The culture with the given id was not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/restaurants/{{restaurantId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"00000000-0000-0000-0000-000000000000",
						"restaurants",
						"{{restaurantId}}"
					]
				},
				"description": "Ejemplo de un request para agregar un restaurante a una cultura que no existe."
			},
			"response": [
				{
					"name": "Add an restaurant to an invalid culture",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-000000000000",
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The Culture with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Add a invalid restaurant to a culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function() {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test('Get expected error message', function() {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql('The Restaurant with the given id was not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"{{cultureId}}",
						"restaurants",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Ejemplo de un request para agregar un restaurante que no existe a una cultura."
			},
			"response": [
				{
					"name": "Add a invalid restaurant to a culture",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{cultureId}}",
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The Restaurant with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get all restaurants of a culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"{{cultureId}}",
						"restaurants"
					]
				},
				"description": "Obtiene todos los restaurantes asociados a una cultura."
			},
			"response": [
				{
					"name": "Get all restaurants of a culture",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{cultureId}}",
								"restaurants"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"14f05d0e-1275-11ed-861d-0242ac120002\",\n        \"name\": \"Mirazur\",\n        \"city\": \"Menton\",\n        \"country\": \"Francia\",\n        \"micheline_stars\": [\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Primera\",\n                \"awarded_date\": \"01-12-2017\"\n            },\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Segunda\",\n                \"awarded_date\": \"01-12-2018\"\n            },\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Tercera\",\n                \"awarded_date\": \"01-12-2019\"\n            }\n        ]\n    },\n    {\n        \"id\": \"14f05d0e-1275-11ed-861d-0242ac120002\",\n        \"name\": \"Nuevo Noma\",\n        \"city\": \"Copenhague\",\n        \"country\": \"Dinamarca\",\n        \"micheline_stars\": [\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Primera\",\n                \"awarded_date\": \"01-12-2009\"\n            },\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Segunda\",\n                \"awarded_date\": \"01-12-2012\"\n            },\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Tercera\",\n                \"awarded_date\": \"01-12-2021\"\n            }\n        ]\n    },\n    {\n        \"id\": \"14f05d0e-1275-11ed-861d-0242ac120002\",\n        \"name\": \"Sant Pau\",\n        \"city\": \"Barcelona\",\n        \"country\": \"España\",\n        \"micheline_stars\": [\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Primera\",\n                \"awarded_date\": \"01-12-2014\"\n            },\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Segunda\",\n                \"awarded_date\": \"01-05-2015\"\n            },\n            {\n                \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n                \"category\": \"Tercera\",\n                \"awarded_date\": \"01-08-2018\"\n            }\n        ]\n    }\n]"
				}
			]
		},
		{
			"name": "Get all restaurants of an invalid culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function() {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test('Get expected error message', function() {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql('The culture with the given id was not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"00000000-0000-0000-0000-000000000000",
						"restaurants"
					]
				},
				"description": "Ejemplo de un request para obtener los restaurantes asociados a una cultura que no existe."
			},
			"response": [
				{
					"name": "Get all restaurants of an invalid culture",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-000000000000",
								"restaurants"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The Culture with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update restaurants of a culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"{{restaruratId}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"{{cultureId}}",
						"restaurants"
					]
				}
			},
			"response": [
				{
					"name": "Update restaurants of a culture",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{restaruratId}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{cultureId}}",
								"restaurants"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Cultura Mexicana\",\n    \"description\": \"La gastronomía mexicana es el conjunto de platillos y técnicas culinarias de México que forman parte de las tradiciones y vida común de sus habitantes, enriquecida por las aportaciones de las distintas regiones del país, que deriva de la experiencia del México prehispánico con la cocina europea, entre otras. El 16 de noviembre del año 2010, la gastronomía mexicana fue reconocida como Patrimonio Cultural Inmaterial de la Humanidad por la Unesco.\",\n    \"restaurants\": [\n        {\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n            \"name\": \"El cielo\",\n            \"city\": \"Washington D. C.\",\n            \"country\": \"Estados Unidos\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Update restaurants of a invalid culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function() {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test('Get expected error message', function() {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql('The culture with the given id was not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"{{restaruratId}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"00000000-0000-0000-0000-000000000000",
						"restaurants"
					]
				}
			},
			"response": [
				{
					"name": "Update restaurants of an invalid culture",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{restaruratId}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-000000000000",
								"restaurants"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The Restaurant with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update an invalid restaurant of a culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function() {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test('Get expected error message', function() {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql('The Restaurant with the given id was not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"{{cultureId}}",
						"restaurants"
					]
				}
			},
			"response": [
				{
					"name": "Update an invalid restaurant of a culture",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{cultureId}}",
								"restaurants"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The Culture with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a restaurant of a culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 204', function() {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/{{restaurantId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"{{cultureId}}",
						"restaurants",
						"{{restaurantId}}"
					]
				},
				"description": "Elimina la relación de un restaurante con la cultura."
			},
			"response": [
				{
					"name": "Delete a restaurant of a culture",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{cultureId}}",
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a restaurant  of an invalid culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function() {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test('Get expected error message', function() {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql('The culture with the given id was not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/restaurants/{{restaurantId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"00000000-0000-0000-0000-000000000000",
						"restaurants",
						"{{restaurantId}}"
					]
				},
				"description": "Ejemplo de un request que intenta eliminar la relación de un restaurante a una cultura que no existe."
			},
			"response": [
				{
					"name": "Delete a restaurant of an invalid culture",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-00000000/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-00000000",
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The Culture with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete  an invalid restaurant of a culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function() {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test('Get expected error message', function() {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql('The Restaurant with the given id was not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"{{cultureId}}",
						"restaurants",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Ejemplo de un request que intenta eliminar la relación de un restaurante que no existe a una cultura."
			},
			"response": [
				{
					"name": "Delete  an invalid restaurant of a culture",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/00000000-0000-0000-0000-00000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{cultureId}}",
								"restaurants",
								"00000000-0000-0000-0000-00000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The Restaurant with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a restaurant non-associated to a culture",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 412', function() {",
							"    pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test('Get expected error message', function() {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql('The Restaurant with the given id is not associated to the Culture');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/{{restaurantId_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cultures",
						"{{cultureId}}",
						"restaurants",
						"{{restaurantId_2}}"
					]
				},
				"description": "Ejemplo de un request que intenta eliminar la relación de un restaurante que esta asociado a otra cultura."
			},
			"response": [
				{
					"name": "Delete a restaurant non-associated to a culture",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{cultureId}}/restaurants/{{restaurantId_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{cultureId}}",
								"restaurants",
								"{{restaurantId_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"The Restaurant with the given id is not associated to the Culture\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}